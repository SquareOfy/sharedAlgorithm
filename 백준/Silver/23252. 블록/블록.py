t = int(input())
#각 블록의 최대 개수가 무려 10억! 절대 하나하나 채우거나
#각 개수를 while문으로 하나씩 상쇄시키는 것은 불가.

#a,b,c의 개수를 보고 판단해야하는 문제
# 우선 직사각형을 만드는데 가장 큰 제약이 될 수 있는 c의 개수부터 고려
# c는 반드시 a가 채워줘야 사각형이 완성되므로 c가 a보다 많을 경우 불가능
"""
a가 더 많은 것은 괜찮다. 단, a-c 가 2의 배수여야 가능. 
a>=c일 때 새로운 문제는 b가 홀수일 때 .

b가 홀수일 때 사각형을 채우기 위해서는 
a와 c가 각각 한개씩 있거나 a가 2개가 있어야 채울 수 있음

따라서 b가 홀수일 때 아래 두 경우 중 한가지라도 해당 안되면 No
  - a-c가 2의 배수이면서 a가 최소 2개 이상인 경우
  - a-c가 2의 배수이면서 a와 c가 최소 1개씩은 존재하는 경우
b가 짝수일 때는 a와 c가 짝만 맞으면 된다. 

처음 제출보다 조건분기를 조금 더 간단하게 바꿨더니 아래처럼 됐음.

"""

for tc in range(t):
    answer = "Yes"
    a, b, c = map(int, input().split())

    if a < c:
        answer = "No"
    else:
        if (a-c)%2!=0:
            answer = "No"
        elif b % 2 != 0 and \
                not ( a>=2 or\
                      (a!=0 and c!=0 )):
            answer = "No"


    print(answer)
